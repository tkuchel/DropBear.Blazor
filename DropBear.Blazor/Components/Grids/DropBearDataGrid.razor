@inherits DropBear.Blazor.Components.Bases.DropBearComponentBase
@using DropBear.Blazor.Enums
@typeparam TItem

<div class="dropbear-datagrid-container @ThemeClass">
    <div class="dropbear-datagrid">
        <div class="datagrid-header">
            <h2>@Title</h2>
            <div class="datagrid-actions">
                @if (EnableSearch)
                {
                    <div class="search-wrapper">
                        <input type="text" class="search-input" placeholder="Search..." @oninput="OnSearchInput"/>
                        <button class="btn-search" @onclick="PerformSearch">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                }
                @if (AllowAdd)
                {
                    <button class="btn-primary" @onclick="AddItem"><i class="fas fa-plus"></i> Add</button>
                }
            </div>
        </div>

        <CascadingValue Value="this">
            @Columns
        </CascadingValue>

        <div class="datagrid-table-wrapper">
            <table class="datagrid-table">
                <thead>
                <tr class="datagrid-row header">
                    @if (EnableMultiSelect)
                    {
                        <th class="datagrid-cell">
                            <input type="checkbox" @onchange="@(e => ToggleSelectAll(e.Value is true))"/>
                        </th>
                    }
                    @foreach (var column in _columns)
                    {
                        <th class="datagrid-cell" style="width: @(column.Width)px" @onclick="@(() => SortBy(column))">
                            @column.Title
                            @if (column.Sortable)
                            {
                                var sortDirection = GetSortDirection(column);
                                <i class="fas @(sortDirection == SortDirection.Ascending ? "fa-sort-up" : sortDirection == SortDirection.Descending ? "fa-sort-down" : "fa-sort")"></i>
                            }
                        </th>
                    }
                    @if (AllowEdit || AllowDelete)
                    {
                        <th class="datagrid-cell">Actions</th>
                    }
                </tr>
                </thead>
                <tbody>
                @foreach (var item in DisplayedItems)
                {
                    <tr class="datagrid-row @(SelectedItems.Contains(item) ? "selected" : "")">
                        @if (EnableMultiSelect)
                        {
                            <td class="datagrid-cell">
                                <input type="checkbox" checked="@SelectedItems.Contains(item)" @onchange="@(e => ToggleSelection(item, e.Value is true))"/>
                            </td>
                        }
                        @foreach (var column in _columns)
                        {
                            <td class="datagrid-cell">
                                @if (column.Template != null)
                                {
                                    @column.Template(item)
                                }
                                else
                                {
                                    @GetFormattedValue(item, column)
                                }
                            </td>
                        }
                        @if (AllowEdit || AllowDelete)
                        {
                            <td class="datagrid-cell">
                                @if (AllowEdit)
                                {
                                    <button class="btn-icon" @onclick="@(() => EditItem(item))">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                }
                                @if (AllowDelete)
                                {
                                    <button class="btn-icon" @onclick="@(() => DeleteItem(item))">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                }
                            </td>
                        }
                    </tr>
                }
                </tbody>
            </table>
        </div>

        @if (EnablePagination)
        {
            <div class="datagrid-footer">
                <div class="pagination">
                    <button class="btn-icon" @onclick="PreviousPage" disabled="@(CurrentPage == 1)">
                        <i class="fas fa-chevron-left"></i>
                    </button>
                    <span>Page @CurrentPage of @TotalPages</span>
                    <button class="btn-icon" @onclick="NextPage" disabled="@(CurrentPage == TotalPages)">
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </div>
                <div class="items-per-page">
                    <label for="itemsPerPage">Items per page:</label>
                    <select id="itemsPerPage" @bind="ItemsPerPage">
                        @foreach (var option in ItemsPerPageOptions)
                        {
                            <option value="@option">@option</option>
                        }
                    </select>
                </div>
            </div>
        }
    </div>
</div>

@code {
    // This empty @code block is necessary for the file to be recognized as a Razor component.
    // All the logic is now in the separate DropBearDataGrid.razor.cs file.
}
